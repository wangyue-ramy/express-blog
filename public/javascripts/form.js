function ajax(t,e,n,r){var o=new XMLHttpRequest;n=JSON.stringify(n),o.onreadystatechange=function(){4==o.readyState&&r(JSON.parse(o.responseText))},o.open(t,e,!0),o.setRequestHeader("Content-type","application/json"),o.send(n)}!function(){function t(t){t.preventDefault();var e=document.getElementsByClassName("form-row"),r=n(this.form),o=new Promise(function(t,e){ajax("post","/login",r,t)});o.then(function(t){switch(t.code){case 1:e[0].setAttribute("prompt",t.des),e[1].setAttribute("prompt","");break;case 2:e[1].setAttribute("prompt",t.des),e[0].setAttribute("prompt","");break;default:window.location.replace(window.location.protocol+"//"+window.location.host+t.redirect)}})}function e(t){t.preventDefault();var e=JSON.stringify(n(this.form)),r=document.getElementsByClassName("form-row");ajax("post","/reg",e,function(t){switch(t.code){case 1:r[1].setAttribute("prompt",t.des),r[0].setAttribute("prompt","");break;case 2:r[0].setAttribute("prompt",t.des),r[1].setAttribute("prompt","");break;case 3:r[0].setAttribute("prompt",t.des),r[1].setAttribute("prompt","");break;default:window.location.replace(window.location.protocol+"//"+window.location.host+t.redirect)}})}function n(t){var e={};inputs=t.getElementsByTagName("input");for(var n=0;n<inputs.length;n++)inputs[n].name&&""!==inputs[n].value&&(e[inputs[n].name]=inputs[n].value);return e}var r=document.getElementById("login"),o=document.getElementById("register");r&&r.addEventListener("click",t),o&&o.addEventListener("click",e),function(){for(var t,e=document.forms[0],n=e.elements,r=0;r<n.length;r++)switch(n[r].name){case"name":n[r].addEventListener("change",function(){this.value.length<6?this.parentElement.setAttribute("prompt","用户名太短"):this.parentElement.setAttribute("prompt","")});break;case"password":t=n[r];break;case"password-confirm":n[r].addEventListener("keyup",function(){this.value&&this.value!=t.value?this.parentElement.setAttribute("prompt","两次密码不一致"):this.parentElement.setAttribute("prompt","")});break;default:return}}()}();
//# sourceMappingURL=data:application/json;base64,
